name: CI/CD Workflow

on:
  push:
    branches:
      - '*'
   
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Set Environment Stage
        run: |
          if [ "${{ github.ref_name }}" == "test" ]; then
            echo "Setting environment to test"
            echo "AWS_DEPLOY_STAGE_ENVIRONMENT=test" >> $GITHUB_ENV
          elif [ "${{ github.ref_name }}" == "develop" ]; then
            echo "Setting environment to dev"
            echo "AWS_DEPLOY_STAGE_ENVIRONMENT=dev" >> $GITHUB_ENV
          elif [ "${{ github.ref_name }}" == "staging" ]; then
            echo "Setting environment to stage"
            echo "AWS_DEPLOY_STAGE_ENVIRONMENT=stage" >> $GITHUB_ENV
          elif [ "${{ github.ref_name }}" == "master" ]; then
            echo "Setting environment to prod"
            echo "AWS_DEPLOY_STAGE_ENVIRONMENT=prod" >> $GITHUB_ENV
          else
            echo "Setting environment to unknown"
            echo "AWS_DEPLOY_STAGE_ENVIRONMENT=unknown" >> $GITHUB_ENV
          fi

      # - name: Print environment variable
      #   run: echo "Stage set to: ${{ env.AWS_DEPLOY_STAGE_ENVIRONMENT }}"

      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: |
          npm install

      - name: Convert install.sh to Unix format and run
        run: |
          sudo apt-get install -y dos2unix
          dos2unix ./install.sh
          chmod +x ./install.sh
          ./install.sh

      - name: Deploy
        run: |
          sudo apt-get update
          sudo apt-get install -y curl gcc g++ make
          curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.38.0/install.sh | bash
          export NVM_DIR="$HOME/.nvm"
          [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
          nvm install 18
          nvm use 18
          python3 -m venv .venv
          source .venv/bin/activate
          npm install -g aws-cdk
          cdk synth
          cdk bootstrap --force
          cdk deploy --all --require-approval never

      - name: Slack Notification Start Build
        if: ${{ github.event_name == 'push' }}
        uses: 8398a7/action-slack@v3
        with:
          status: custom
          fields: repo,message,commit,author,action,eventName,ref,workflow,took
          custom_payload: |
            {
              "attachments": [
                {
                  "color": "#FFFF00",
                  "blocks": [
                    {
                      "type": "section",
                      "text": {
                        "type": "mrkdwn",
                        "text": "Build *${{ github.run_number }}* for platform-emea-data-model is STARTING. :rocket:\n <${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}> | View Action>"
                      }
                    }
                  ]
                }
              ]
            }

      - name: Slack Notification on Success or Failure
        if: always()
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: repo,message,commit,author,action,eventName,ref,workflow,took
          custom_payload: |
            {
              "attachments": [
                {
                  "color": "${{ job.status == 'success' && '#00FF00' || '#FF0000' }}",
                  "blocks": [
                    {
                      "type": "section",
                      "text": {
                        "type": "mrkdwn",
                        "text": "Deploy *${{ github.run_number }}* for platform-emea-data-model from branch ${{ github.ref_name }}\nresult: ${{ job.status }}. ${{ job.status == 'success' && ':sunny:' || ':thunder_cloud_and_rain:' }}\nBuild URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
                      }
                    }
                  ]
                }
              ]
            }
